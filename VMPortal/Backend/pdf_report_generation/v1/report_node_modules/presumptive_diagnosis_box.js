const Utils = require("./report_utils");

class PresumptiveDiagnosisBox {


   #pdf;
   #config;

   #TITLE_FONT_SIZE = 11;
   #TEXT_FONT_SIZE  = 10;
   #INDEX_FONT_SIZE = 16;
   #ROUND_RATIO     = 0.1; // % of height. 
   #LINE_WIDTH      = 0.5;   // Absolute
   #LINE_HEIGHT     = 0.76; // % of the height. 
   #LEFT_MARGIN     = 0.02; // % of the width


   /**
    * Renders a borderless, round rectangle according to the boundingBox passed as a paraemters with a separtion and two titles.
    * the left hand of the separtion contains a title and long, multiline, text. While the right hand contains a title and a large value. 
    * @param {Object} pdf - jsPDF instance. 
    * @param {Object} config - Configuration parameters
    * @param {string} [config.left_title]  - Title on the left hand size of the box. 
    * @param {string} [config.right_title] - Title on the right hand side of the box. If empty, nothing is drawn in the right hand side. 
    * @param {string} [config.text]        - Mutiline text on the left hand side. 
    * @param {string} [config.value]       - Value to show on the right hand size.
    * @param {Object} [config.boundingBox] - Object comprised of the x,y,w,h of the bounding box for this element.
    * @param {number} [config.separator]   - % of the boundingBox.w at which the separator line is drawn. 
    */

   constructor(pdf,config){
      this.#pdf = pdf;
      this.#config = config;

      this.render();

   }

   render(){
      let x = this.#config.boundingBox.x;
      let y = this.#config.boundingBox.y;
      let w = this.#config.boundingBox.w;
      let h = this.#config.boundingBox.h;
      let R = h*this.#ROUND_RATIO;

      let line_h = this.#LINE_HEIGHT*h; // The height of the line
      let line_margin = (h - line_h)/2; // The space above and below the line.       

      // Where the top of the line will be located. 
      let line_top = y+line_margin;
      
      // Drawing the background rectangle. 
      this.#pdf.setFillColor(Utils.Colors.PRESUMPTIVE_GRAY);
      this.#pdf.roundedRect(x,y,w,h,R,R,"F");


      // Setting up for rendering the titles. 
      this.#pdf.setFont("Montserrat","SemiBold");
      this.#pdf.setFontSize(this.#TITLE_FONT_SIZE);
      this.#pdf.setTextColor(Utils.Colors.MAIN_BLUE);      
      
      // Rendering the left hand side title. 
      let xx = x + w*this.#LEFT_MARGIN;
      let ltitlebb = this.#pdf.getTextDimensions(this.#config.left_title);
      this.#pdf.text(this.#config.left_title,xx,line_top,{baseline: "top"});

      // Rendering the text. 
      this.#pdf.setFontSize(this.#TEXT_FONT_SIZE);
      this.#pdf.setFont("Montserrat","Regular");
      let text = this.#config.text.split("\n");
      this.#pdf.setLineHeightFactor(1.5);
      let bb = this.#pdf.getTextDimensions(text);      
      xx = x + w*this.#LEFT_MARGIN;
      let yy = line_top + ltitlebb.h + ((line_h - ltitlebb.h) - bb.h)/2 // This centers the text vertically in the remaining separator line height below the title. 
      this.#pdf.text(text,xx,yy,{baseline: "top", lineHeightFactor : 1.5})
      this.#pdf.setLineHeightFactor(1.15); // returning it to normal. 


      // Setting the right title to ena empty string is a way of signaling to avoid drawing in the right hand side. 
      if (this.#config.right_title != ""){

         // Drawing the separator line. 
         this.#pdf.setDrawColor(Utils.Colors.MAIN_BLUE);
         
         this.#pdf.setLineWidth(this.#LINE_WIDTH);
         let line_x = x + w*this.#config.separator - (this.#LINE_WIDTH/2);
         
         this.#pdf.line(line_x,line_top,line_x,y+h - line_margin,"S");


         // Rendering the right hand title. 
         this.#pdf.setFontSize(this.#TITLE_FONT_SIZE);
         this.#pdf.setTextColor(Utils.Colors.MAIN_BLUE);         
         bb = this.#pdf.getTextDimensions(this.#config.right_title);
         xx = line_x + (this.#LINE_WIDTH/2) + ((1-this.#config.separator)*w - bb.w)/2;  // Horizontal center of the title in the area to the right of the separator line. 
         this.#pdf.text(this.#config.right_title,xx,line_top,{baseline: "top"});

         // Rendering the value. 
         this.#pdf.setFontSize(this.#INDEX_FONT_SIZE)
         this.#pdf.setFont("Montserrat","SemiBold");
   
         bb = this.#pdf.getTextDimensions(this.#config.value);
         xx = line_x + (this.#LINE_WIDTH/2) + ((1-this.#config.separator)*w - bb.w)/2;  // Horizontal center of the value in the area to the right of the separator line. 
         this.#pdf.text(this.#config.value,xx,yy,{ baseline: "top" })

      }

   }
   


}

module.exports = PresumptiveDiagnosisBox