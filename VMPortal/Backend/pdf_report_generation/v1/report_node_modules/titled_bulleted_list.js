const Utils = require("./report_utils");


class BulletedList {

   /**
    * Constructs a predefined formated bulleted list. 
    * @param {jsPDF Instance} pdf 
    * @param {string} [title] - The title above the bulleted list. 
    * @param {Array}  [items] - Strings to itemized. Will be split into multiline in \n characters.
    * @param {number} [x] - The x coordinate to be kept by the bulleted list. 
    * @param {number} [y] - The y coordinate to the top left corner of the title of the list. 
    */

   #pdf;
   #boundingBox;
   #R

   // Constants.
   #FONT_SIZE = 11;
   #BULLET_R  = 0.2 // % of Text height.   


   constructor(pdf,title,items,x,y){
      this.#boundingBox = {};      
      this.#boundingBox.x = x;      
      this.#boundingBox.y = y;

      this.#pdf = pdf;

      // Drawing the title.
      this.#pdf.setFont("Montserrat","SemiBold");
      this.#pdf.setFontSize(this.#FONT_SIZE);
      this.#pdf.setTextColor(Utils.Colors.RESULT_TEXT_COLOR);
      this.#pdf.text(title,x,y,{baseline: "top"});

      var bb = this.#pdf.getTextDimensions(title);
      var originaly = y;
      var spaceBetweenLines = bb.h*0.5; // We use half the line height as the vertical separation. 
      y = y + bb.h + spaceBetweenLines;
      this.#boundingBox.w = bb.w;
      this.#R = bb.h*this.#BULLET_R

      for (var i = 0; i < items.length; i++){
         var text = items[i];
         bb = this.renderItem(text,x,y);

         //pdf.setDrawColor("#00ff00");
         //pdf.rect(x,y,bb.w,bb.h,"S");

         y = y + bb.h + spaceBetweenLines;

         // Computations The largest width will be the bounding box width.
         if (bb.w > this.#boundingBox.w) this.#boundingBox.w = bb.w;
      }

      // Computhing the height. 
      this.#boundingBox.h = y - originaly;

   }

   renderItem(text,x,y){
      this.#pdf.setFont("Montserrat","Regular");
      this.#pdf.setFontSize(this.#FONT_SIZE);
      this.#pdf.setTextColor(Utils.Colors.RESULT_TEXT_COLOR);
      this.#pdf.setFillColor(Utils.Colors.BLACK);

      var bb = this.#pdf.getTextDimensions(text);

      // Drawing the Bullet.
      //console.log(x,y,bb,this.#R);
      this.#pdf.circle(x+this.#R,y+bb.h/2,this.#R,"F");

      // The split up is done after the bouding box calculations so that the bullet will be in the center of the first line. 
      text = text.split("\n");
      bb = this.#pdf.getTextDimensions(text);

      // Drawing the text.
      this.#pdf.text(text,x+5*this.#R,y,{baseline: "top"});

      bb.w = bb.w+5*this.#R;

      return bb;

   }

   getBoundingBox(){
      return this.#boundingBox;
   }

}

module.exports = BulletedList