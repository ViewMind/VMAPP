Checklist procedure to ensure that EyeExperimenter Works Properly.

Prerequisites:
1) The EyeTracker needs to be connected to the computer where the program will be running.
2) The EyeTracker server needs to be running and it should be reading the EyeTracker without problems.
3) A directory is already selected as the information repo. 

Checking procedure.
1)  Open the configuration file and manually set test_mode to true (test_mode = true;)
2)  In the configuration ensure that the address is for the production server (18.220.30.34).
3)  Configure a viewmind_etdata folder in a different location. 
4)  The change the name of the localdb.dat to localdb.dat.bkp in the Application directory.
5)  Open the EyeExperimenter.
6)  Open the Setting Dialog. 
       a) Verify that the program will be tested in the language that is most likely
       to be used. 
	   b) Set the Country where the Medical Institution is located. (Reboot application if this changes).
       c) Activate mouse and demo mode.
7)  Start and create a new doctor and ensure that the ID is vm00000000.
8)  Select the doctor and go to patient screen. A Synch should occur. Check that the doctor 
    appeared in the DB. (Remote console connection)
9)  Modify the Dr with some information. And go to the patient screen again. Another synch should occur. 
    Verify that the doctor appears again.
10) Create a new fictional patient. Check DB for its appearance. 
    Keep in mind the used ID so as to quickly locate the patient folder. 
11) Modify the fictional patient and Check that it appears in the DB again.
12) Select the patient and start study. Select reading, binding uc and binding bc
13) Complete the demo run. When asked to send the report right now select Yes. 
14) Select the created patient and click on View report.
15) Select the Demo information and verify that it shows all values.
16) Download the Report to the PC anywhere to verify correct report generation 
    (Open up and check that there are no problems with the report).
17) Go back to patient screen and select the created patient again. Select only bc and uc and select 3 targets.
18) Complete study and press no.
19) Repeat BC and UC study with 2 small targets with Left Eye.
20) Repeat BC and UC study with 3 small targets with Right Eye.
21) Start a reading experiment. Abort by pressing escape. 
    a) Verify that data was moved to the exp_abort folder of the patient directory.
	b) Verify that all previous tests were generated with the correct name.
	c) Open up the files and check for zeros in experiments done with only one eye.
22) Copy the files found in test files to the patient directory. 
23) Reload the patient list and check that the report pending button appears. 
    a) Press the report pending button. Make sure that the information is loaded into the S3 bin.
    b) Once checked, delete the vm00000000 bin. 
	c) Check that the results were logged in the DB. 
24) Go to setting screen and disable the mouse.  
25) Do a demo run with Reading, Binding UC and Binding BC. 
    a) Verify, in the patient directory that the information saved is coherent.
26) Change the repo directory to the original setting.
27) Change the configuration to test_mode = false;
28) Change the localdb.dat.bkp to localdb.dat
29) Finally restart the application one last time and ensure that there are no problems. 



=====================================================================

Sistema de Login y control de evaluaciones.

Procedimiento:
1) Una determinada institución médica (de ahora en mas INST) nos pide un equipo de evaluacion, lo cual incluye laptop y ET.
2) Se crea un identificador único a la institucion en la base de datos. Este identificador va asociado a un entero que es el nuemro de evaluaciones que tienen disponibles
3) La computadora, de la misma manera que tiene identificado el ET con el numero de serie y sus parámetros tendrá el identificador único que generamos nostros. 
4) Cuando se agregue un nuevo doctor se le deberá pedir que ingrese una contraseña. La opción de cambiarla posteriormente estará ubicada en el menu de Doctor(arriba a la derecha).
Esta contraseña NO la guardamos nosotros sino que queda de forma local en la PC. El doctor está por supuesto asociado a la institucion médica en la base de datos (ya que esa informacion esta en al PC). 
NOTA: No tenemos forma de controlar que cada persona que quiera se haga un usuario. Lo que podemos hacer es que la institución nos diga a nostros los médicos/técnicos habilitados y nosotros lo verificamos cuando se agregan.
5) Cada vez que venga un pedido de esa institución para procesar datos y nosotros efectivamente se lo enviemos disminuimos el contador en la base de datos. 
Ademas chequeamos que el numero de serie del ET pertenezca a la institución. 
Si realizan un pedido con el contador en cero, entonces se le envia un mensaje diciendo que han llegado a su cupo. Instituciones con el el contador en -1 pueden utilizarse para marcar que tienen evaluaciones ilimitadas. 
Las evaluaciones demo no deberian caer en esta cuenta. 

Cambios que se requieren
1) Una nueva tabla en la base de datos. Con Institucion y sus datos (como minimo nombre, direccion, pais, identificador unico y contador).
2) La tabla de ET deberá crearse con sus datos (Numero de serie, Marca, Modelo, Frecuencia de sampleo e institución médica). Esto ultimo nos va a permitir prevenir que alguien "clone" el indentificador de institucion.
3) La tabla de tDoctores tiene que ser modificada para permitir que la institucion médica ahora sea el keyid de la institución en la tabla de instituciones nueva.
4) Se modificar el programa del servidor para realizar los chequeos de ET valido y que quede cupo de procesamiento.
5) Realizar la pantalla de verificación de ingreso de contraseña y modificar la creación del doctor para que sea posible ingresar una.
7) Verificar que no se puede "agregar" un doctor con un ID que ya existe para evitar que se sobrescriba la contraseña (Hoy esta posibilidad existe pero es mas que nada un bug inconsecuente).
8) Crear la pantalla que muestra que no se pueden pedir mas datos de procesamiento.



