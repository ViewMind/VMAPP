The API will function as three part address (always) followed by parameters if necessary. Always with POST.

The parts will be OBJECT/OPERATION/INDENTIFIER?other_parameters

So for example getting all doctors for an institution will look like
portal_users/getall/insitution_id

And getting all rawdata from a given institution in a given timeframe will be
rawdata/download/institution?from=date&to=date

In the same way permissions can be specified like so: For each object. 
{
   "object" : [ "operation_1",  "operation_2", ....]   
}


VMClients have the following permissions: 
{ 
   "portal_users": [ "getall" ],
   "reports" : ["generate"]   
}
==================================== API Spec.

-> OBJECT: portal_users
      OPERATION: getallmedical
         IDENTIFIER: institution_id
            Will return a associative array with the key the internal user key and the value another associative array with full name and email. Only medical and admin users. 
            
-> OBJECT: institution
      OPERATION: list.
         IDENTIFIER: portal_user
            Will return a list of the institution data that the portal_user can see. 

-> OBJECT: institution
      OPERATION: operating_information
        IDENTIFIER:: institution_id
            PARAMETERS: ppkey
               Returns the list of portal users associated with the institutions and the processing parameters associated with ppkey. 
               EXAMPLE: institution/operating_information/1?ppkey=htcviveeyepro
            
-> OBJECT: reports
      OPERATION: generate
         IDENTIFIER: institutution_id
               PARAMETERS: instance
               Will trigger the whole report processing.
               1) DB Update of Subject data, if necessary.
               2) Whatever checks are necessary 
               3) First pass at JSON File 
                   - Computes fixation based values. 
                   - Computes other metadata for each trial or trial set.
                   - Sets other metadata such as the processing date (maybe the processing location?).
               4) CSV Creation.
               5) R Processing. 
               6) Second pass at the JSON file that stores all results into the JSON 
               7) DB Storage of all appropiate results. 
               8) With the keyid form the evaluations table store, the JSON file in the S3. 
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

There 3 Tiers Of Processing.

1) Procesing at the data set level
   - Compute the go GoNoGo Fixation values. (modifies the input fixation list).
   - Comnpute the dataset values. Returns value map. and requires as intput the raw data list, the fixation list and, if GoNoGo, it's hitboxes. 
2) Processng at the Trial Level
   - If NBACK (RT/MS) computeFixationBasedNBackValues  Modifies a fixation map that contains all fixations for each of the data sets, that is passed as a parameter. 
     This adds fields to the fixation vector. 
     Then we also compute the fixation index in the last dataset where the sequence is completed.    
3) Processing at the Study Level.
  - Duration of the study as the highest timestamp - lowest time stamp. 
  - If Binding we compute the binding score. 
 
 
We need to get a trial. Modify its values. and set it back
The final processi level (3) can be done over the entire structure. 
               
               
               
               
               
               
               
               
   
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////      
      OPERATION: list
         IDENTIFIER: portal_user_id
            PARAMETERS: institution_id
               Returns a list of reports and associated patients for the institution. If portal user role is Admin, all will be shown together with linked portal portal_users. 
               Otherwise this column is omitted and only those linked to the portal_user are shown. 
               
      OPERATION: get
         IDENTIFIER: portal_user_id
            PARAMETERS: report_id
               Returns all the data of the specific report and associated subject data. 
               
            
-> OBJECT: rawdata
      OPERATION: download
         IDENTIFIER: institution_id
            PARAMETERS: from and to. (Start and End Date).
               Will copy all requested data from S3 (queries aside) to a directory. Compress it and send it back. 
