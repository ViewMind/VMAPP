ViewmindID: 075933739023
IAM User: ariel.arelovich
aws profile: viewmind

Ports 
RawDataServer - 54918
EyeServer     - 54912
EyeSQLServer  - 54915

54918,54912,54915

Load Balancing requires target groups. 
1 Target Group for Processing
1 Target Group for Server Requests. 

AutoScaling group is to ensure that machines are never out of commission. 

When selecting a VPC for RDS it needs to have subnets in at least two availability zones. 

Interal IP Distribution. 
Public Subnet CIDR
US-EAST-2a: 10.100.100.0/24
US-EAST-2b: 10.100.101.0/24
RDS Subnet CIDR
US-EAST-2a: 10.100.16.0/20
US-EAST-2b: 10.100.48.0/20
EC2 Subnet CIDR
US-EAST-2a: 10.100.0.0/20
US-EAST-2b: 10.100.32.0/20


Current Infrastrucute consist of 
1 VPC (ViewMindMain) Containing the following subnets
   2 Private RDS Subnets (Routes to)
      Connection to a NAT Gateway (MainNATGateWay)
      Connection from a Managed Prefix List (pl-7ba54012) to an endpoint (which is a gateway point fro com.amazonaws.us-east-2.s3).    
   2 Private EC2 Subnets. (Routes to) 
      Connection to a NAT Gateway (MainNATGateWay)
      Connection from a Managed Prefix List (pl-7ba54012) to an endpoint (which is a gateway point fro com.amazonaws.us-east-2.s3).
   2 Public subnets:
      Connection to an Internet Gateway. 
Security groups for granting access to the both RDS databases and EC2 Instnaces
1 EC2 Server processing instance in one of the EC2 Private Subnets
1 EC2 Web Server instance in one of the EC2 Private Subnets
1 EC2 Bastion (with public IP, as entry point in the system)

4 RDS Instances in the private RDS subnets only accessible (through proper security groups) by the three EC2 instances mentioned above. 

The objective for this is to only have two entry points in the system. The bastion for console access only for whitelisted IPs
And two public facing Load Balancers. 
1) For Handling Processing Requests.
2) For Handling the Web Server
      
The problem is in 1). Each processing server runs three separate applications on three different ports: 54918,54912,54915
My client application creates an SSL connection server-running application and then interchanged custom made packets of information. The processing server will communicate with RDS databases.

In order to use a Load Balancer we need to create a Target Group of EC2 Instances. And then point the Load Balancer to that target group.
However I don't know how to create the Load Balancer/Target Group so that it will forward all traffic for those three ports "as is" into the processing server.
This is issue 1.
However I'm currently stuck in issue 2. In order for Load Balancer to actually start sending traffic to EC2 instances in our target group, it needs to pass a healthcheck, which includes some kind of http response. These seem to pass naturally when the EC2 instance is hosting a web server, however since this is a custom application and not web server I can't get the healthchecks to pass. 

The objective is to add, in the future, more Processing Servers to the Target Group pointed by the load balancer, hence creating scalability. 

What I would need is help on how to configure load balancing for our custom application.
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

3) RDS Instance for vm_main   (534sY=17ZyzAoM:q+=Y2) 
4) RDS Instance for vm_secure (bTW90?5$m%zpM$084hVG)

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
RECEPEE

VPC:
- Main VPC CIDR: 10.100.0.0/16. 

Subnets:
   Public Subnet CIDR
      REGIONa: 10.100.100.0/24
      REGIONb: 10.100.101.0/24
   RDS Subnet CIDR
      REGIONa: 10.100.16.0/20
      REGIONb: 10.100.48.0/20
   EC2 Subnet CIDR
      REGIONa: 10.100.0.0/20
      REGIONb: 10.100.32.0/20
   
Security Groups:
- Bastion: Allow my IP on TCP Port 22. Must be switchable via script. 
- LoadBalancerWeb: Allows port 80 and 443 connections from anywhere. (Two rules for each. One for source 0.0.0.0/0 and another form ::0).
- DatabaseAccess: Empty security Group.
- Database: Allows the group DatabaseAccess access to TCP port 3306.
- BastionAccess: Allows the group Bastion access to TCP port 22 for ssh. 

Internet Gateways
- Create 1 attached to the Main VPC. 

NAT Gateways
- Create 1 Attached to the public subnet in REGIONa. (It should have an elastic IP address).

Managed Prefix Lists
- Create a Manged prefix list to com.amazonaws.REGION.s3 (It might be auto created)

Route Tables
- Create a Route Table for each private subnet. 
  Each Route Table will have 3 entries.
  1) TARGET: Local. DESTINATION: 10.100.0.0/16 (Automatically added and cannot be changed)
  2) TARGET: The NAT Gateway. DESTINATION: 0.0.0.0/0
  Associate the Route Table with its respective subnet. So Route Table RDSa will be associated with Subnet RDSa.
  
- For the Public Subnet
  Create a single Route Table and associate both public subnets to it. 
  DESTINATION: 10.100.0.0/16 TARGET: local  (Automatically added and cannot be changed)
  0.0.0.0/0 DESTINATION: The Internet Gateway.
  
Endpoint
- Create an endpoint. 
  Service: is com.amazonaws.REGION.s3
  Type: Gateway
  When given the option associate with all the Routes for private subnets.

Bastion Creation
 - Use the create VPC
 - Use a Public Subnet
 - Should have Bastion and DatabaseAccess security groups. 
 
 Server Creation
 - Use the created VPC
 - Use the a Private Subnet (EC2 subnet)
 - Use BastionAccess and DatabaseAccess. So it can access the databases and it can be accessed by the Bastion. 
 - If WebServer also add LoadBalancerWeb
 
 RDS Creation
 - MySQL
 - Select the database type.
 - Select the created VPC
 - VPC security group Database
 
 Command to install amazon linux extras.
 sudo amazon-linux-extras install php8.0
  
- Two Load Balancers
  1 - First will go to the APIServer. It will be the address used by the VMClient and partnes. 
  2 - Second will go to the WebServer. It will be used by For the Portal. 
  
For each of the web servers
1) Install httpd, php
2) Then install php8.0 with sudo amazon-linux-extras install php8.0
3) Using ACM create a new certificate for *.viewmind.ai
   a) Use WIX.com (our DNS manager) to verify the certificate (using DNS verification)
   b) Then add a new name assocation for the new webserver. For example sommething-somethingelse.viewmind.ai
4) Create a new target group adding the webserver to that target group. 
5) Create a new load balancer:
   - When creating the load balancer they need to be associated with both public subnets. 
   - Add two listners the one in port 80 redircts to the 443
   - The 443 will redirect to one of the webservers
   - Associate the loadbalancer with the target group above.  
By now the server should be accessible from the web. 

For the next webserver the only step that is NOT necessary is to create a new ACM certificate. However step 3b must be repeated. s


  
  





   
   



